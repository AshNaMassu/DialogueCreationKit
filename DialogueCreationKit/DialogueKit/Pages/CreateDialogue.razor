@page "/"
@page "/create"
@using DialogueCreationKit.DialogueKit.Components
@using DialogueCreationKit.DialogueKit.Enums;
@using DialogueCreationKit.DialogueKit.Managers;
@using DialogueCreationKit.DialogueKit.Models
@using System.Text.Json;
@using System.ComponentModel.DataAnnotations;
@using System.Globalization;
@using DialogueCreationKit.DialogueKit.Models.View;
 
<style>
    .grid-row {
        padding-top: 8px;
        padding-bottom: 8px;
    }

    .grid-row.main {
        height: 100%;
    }

    .grid-col-main {
        background-color: #0000ff05;
        padding-left: 16px;
        padding-right: 16px;
        height: 100%;
        overflow-y: auto;
    }

</style>

@inject IJSRuntime JSRuntime
@inject DialogueCreationModel _model
@implements IDisposable

<GridRow Class="grid-row main">
    <!--main-->
    <GridCol Span="12" Class="grid-col-main" >
        <!--col 0-->
        <GridRow Class="grid-row ">
            <GridCol Span="12">
                <Select @bind-Value="@_model.Mode"
                        DefaultValue="@DialogueCreateMode.Dialogue"
                        TItemValue="DialogueCreateMode"
                        TItem="string" >
                    <SelectOptions>
                        <SelectOption TItemValue="DialogueCreateMode" TItem="string" Value="@DialogueCreateMode.Dialogue" Label="Диалог" />
                        <SelectOption TItemValue="DialogueCreateMode" TItem="string" Value="@DialogueCreateMode.RandomMessages" Label="Рандомные сообщения" />
                    </SelectOptions>
                </Select>
            </GridCol>

            <GridCol Flex=@("16px") />

            <GridCol Span="8">
                <Button Block Icon="@IconType.Outline.Sync" OnClick="@(() => DialogueCreationManager.CreateMessageList(_model))">Обновить</Button>
            </GridCol>

        </GridRow>

       
        <GridRow Class="grid-row ">
            <GridCol Flex=@("auto")>
                @if (_model != null)
                {
                    <GridRow Class="grid-row ">
                        <GridCol Span=4>
                            @(_model.Mode == DialogueCreateMode.Dialogue ? "Главный герой" : "Имя файла")
                        </GridCol>
                    </GridRow>

                    <GridRow Class="grid-row ">
                        <GridCol Span="12">
                            <Input @bind-Value="@_model.ActorName" Placeholder="Имя" />
                            </GridCol>
                        </GridRow>
                }

                @if (_model.Mode == DialogueCreateMode.Dialogue && _model.Companion != null)
                {
                    <GridRow Class="grid-row ">
                        <GridCol Span=4>
                             Собеседник
                       </GridCol>
                    </GridRow>

                    <GridRow Class="grid-row ">
                        <GridCol Span="12">
                            <Select @bind-Value="@_scene"
                                DefaultValue="@SceneEnum.Scene0"
                                TItemValue="SceneEnum"
                                TItem="string">
                                <SelectOptions>
                                    <SelectOption TItemValue="SceneEnum" TItem="string" Value="@SceneEnum.Scene0" Label="Офис" />
                                    <SelectOption TItemValue="SceneEnum" TItem="string" Value="@SceneEnum.Scene1" Label="Семья" />
                                </SelectOptions>
                            </Select>
                        </GridCol>

                        <GridCol Flex=@("16px") />

                        <GridCol Span="12">
                            <Select @bind-Value="@_model.Companion"
                                DefaultValue="@(_scene == SceneEnum.Scene0 ? Scene0[0] : Scene1[0])"
                                TItemValue="Npc"
                                TItem="Npc"
                                DataSource="@(_scene == SceneEnum.Scene0 ? Scene0 : Scene1)">
                               
                            </Select>
                        </GridCol>
                    </GridRow>

                    
                    <GridRow Class="grid-row ">
                       <GridCol Span="12">
                            <Input @bind-Value="@_model.Companion.Name" Placeholder="Имя" />
                       </GridCol>
                    </GridRow>

                    <GridRow Class="grid-row ">
                       <GridCol Span="12">
                          <Input @bind-Value="@_model.Companion.Id" Placeholder="@Guid.Empty.ToString()" />
                       </GridCol>
                       
                       
                       <GridCol Flex=@("16px") />

                       <GridCol Span="8">
                            <Button OnClick="@(() => _model.Companion.Id = Guid.NewGuid())">Сгенерировать</Button>
                       </GridCol>
                       
                    </GridRow>
                }
                </GridCol>
            </GridRow>

        <GridRow Class="grid-row ">
            <GridCol Span="24">
                <GridRow Class="grid-row ">
                    <GridCol Span=8>
                        Содержание диалога
                    </GridCol> 
                </GridRow>
            
                <GridRow Class="grid-row ">
                    <GridCol Flex=@("auto")>
                        <TextArea Placeholder=@($"- Реплика 1\n- Реплика 2\n- Реплика 3\n- Реплика 4\n") AutoSize MaxRows="15" Value="@_model.Content" DebounceMilliseconds="100" OnChange="OnContentChanged" />
                    </GridCol>
                </GridRow>
                <GridRow Class="grid-row ">
                    <GridCol Span="24">
                        <Button Block Icon="@IconType.Outline.Sync" OnClick="@(() => DialogueCreationManager.CreateMessageList(_model))">Обновить</Button>
                    </GridCol>
                </GridRow>
            </GridCol>
        </GridRow>
    <!--col 0-->
    </GridCol>

    <GridCol Span="12" Class="grid-col-main">
        @if (_model.ListMessages != null && _model.ListMessages.Count > 0)
        {
            <GridRow Class="grid-row ">
                <GridCol Span="24">
                    <Button Block Icon="@IconType.Outline.Download" OnClick="@(() => DialogueCreationManager.Serialize(JSRuntime, _model))">Скачать диалог</Button>
                </GridCol>
            </GridRow>
            <GridRow Class="grid-row ">
                <GridCol Flex=@("auto")>
                    <AntList DataSource="@_model.ListMessages" ItemLayout="@ListItemLayout.Vertical">
                        <ChildContent Context="item">
                            <MessageView Message=@item />
                        </ChildContent>
                    </AntList>
                </GridCol>
            </GridRow>
            <GridRow Class="grid-row ">
                <GridCol Span="24">
                    <Button Block Icon="@IconType.Outline.Download" OnClick="@(() => DialogueCreationManager.Serialize(JSRuntime, _model))">Скачать диалог</Button>
                </GridCol>
            </GridRow>
        }
    </GridCol>
<!--main-->
</GridRow>

@code {
    protected override Task OnInitializedAsync()
    {
        _model.Content = _content;
        _model.OnUpdateAllEvent += Refresh;

        return base.OnInitializedAsync();
    }

    private void Refresh()
    {
        StateHasChanged();
    }

    private void OnContentChanged(string value)
    {
        if (!_model.Content.Equals(value))
        {
            _model.Content = value;

            DialogueCreationManager.CreateMessageList(_model);
        }
    }

    public string _content { get; set; } =
        "- привет" + Environment.NewLine +
        "- привет" + Environment.NewLine +
        "- как дела?" + Environment.NewLine +
        "- хорошо, сам как?" + Environment.NewLine +
        "- да в целом неплохо. что собираешься делать?" +Environment.NewLine +
        "- посижу поработаю, а дальше хз" +Environment.NewLine +
        "- план хороший" +Environment.NewLine +
        "- да, мне тоже нравится" +Environment.NewLine +
        "- ну ладно, я погнал" +Environment.NewLine +
        "- а ты куда?" +Environment.NewLine +
        "- да в деревушку" +Environment.NewLine +
        "- хэх, забавно" + Environment.NewLine +
        "- ага, ладно, пока" + Environment.NewLine +
        "- удачи";

    public List<Npc> Scene0 = new List<Npc>()
    {
        new Npc() { Id = Guid.Parse("592804aa-c8e4-4c19-9f1d-3d991206155b"), Name = "Alex"},
        new Npc() { Id = Guid.Parse("7e7424be-e274-456e-aa86-505c876b717d"), Name = "Dimon"},
        new Npc() { Id = Guid.Parse("410b834e-2bee-4ac4-8605-e63ff516e5b7"), Name = "Maria"},
        new Npc() { Id = Guid.Parse("00e73c35-d962-4a6b-af6b-79e39105b051"), Name = "Max"},
        new Npc() { Id = Guid.Parse("f533c766-23af-4876-bfa0-6c8433792b4d"), Name = "Anna"},
        new Npc() { Id = Guid.Parse("79dd79a3-f63c-4012-844e-c39a08239e0e"), Name = "Vladimir"},
        new Npc() { Id = Guid.Parse("64d9abed-1624-47a1-a6aa-73aba12d3f01"), Name = "Nicolay"},
        new Npc() { Id = Guid.Parse("a172ceb1-268f-46e5-b0f7-57a62f456e68"), Name = "Elena"},
        new Npc() { Id = Guid.Parse("24a82e9f-9209-45cb-8aac-8232aa2fa995"), Name = "Tatyana"},
        new Npc() { Id = Guid.Parse("d6ae1e55-ab97-41bb-8250-865dcbd1d80b"), Name = "Ekaterina"}
    };

    public List<Npc> Scene1 = new List<Npc>()
    {
        new Npc() { Id = Guid.Parse("4385c047-4e48-4ebd-b1a4-8a5d0c630786"), Name = "Dad"},
        new Npc() { Id = Guid.Parse("6c9bd3ed-42bb-4c00-938b-eabe6369506a"), Name = "Mom"},
        new Npc() { Id = Guid.Parse("0b80c75f-d125-4474-ac9a-e370eae24ff4"), Name = "Roman"},
        new Npc() { Id = Guid.Parse("bfc32de0-25b7-413e-b9c8-7c3f5d8e89b2"), Name = "Kate"},
        new Npc() { Id = Guid.Parse("f1c92ec5-cf3b-402d-ad34-bc1a83d1bbcc"), Name = "Liza"},
    };

    private SceneEnum _scene { get; set; } = SceneEnum.Scene0;

    public void Dispose()
    {
        _model.OnUpdateAllEvent -= Refresh;
    }
}