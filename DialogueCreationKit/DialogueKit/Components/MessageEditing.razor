@using DialogueCreationKit.DialogueKit.Models.View;
@using DialogueCreationKit.DialogueKit.Models;


@if (Message != null && Message.Message.Id % 2 == 0)
{
    <GridRow Class="grid-row">
        <GridCol Flex=@("auto")>
            <MessageView Message="@Message.Message" IsNeedChecked="false" />
        </GridCol>
    </GridRow>

    @if (Message.Checks != null)
    {
        foreach (var check in Message.Checks)
        {
            <GridRow Class="grid-row ">
                <GridCol Flex=@("auto")>
                    <h4>Формы глагола: @check.Value</h4>
                </GridCol>
            </GridRow>

            <GridRow Class="grid-row ">
                <GridCol Flex=@("auto")>
                    <Checkbox @bind-Checked=@check.IsInfinitive>Изначально инфинитив</Checkbox>
                </GridCol>
            </GridRow>

            <GridRow Class="grid-row ">
                <GridCol Span="4">
                    Инфинитив: 
                </GridCol>
                <GridCol Flex=@("auto")>
                    <Input @bind-Value="@check.Infinitive" />
                </GridCol>
            </GridRow>

            @if (check.Variants != null)
            {
                foreach (var variant in check.Variants)
                {
                    <GridRow Class="grid-row ">
                        <GridCol Span="4">
                            Вариант: 
                        </GridCol>
                        <GridCol Flex=@("auto")>
                            <Input Value="@variant.Value" />
                        </GridCol>
                    </GridRow>
                }

                <GridRow Class="grid-row ">
                    <GridCol Flex=@("auto")>
                        <Button Block Icon="plus" OnClick="() => check.Variants.Add(new Variant(null))">Добавить свой вариант</Button>
                    </GridCol>
                        <GridCol Flex=@("auto")>
                        <Button Block Icon="delete" Disabled=@(check.Variants.Count < 2) OnClick="() => check.Variants.RemoveAt(check.Variants.Count - 2)">Добавить свой вариант</Button>
                        </GridCol>
                </GridRow>
            }
        }
    }
}


@code {
    [Parameter]
    public DialogueMessageCheckView Message { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }


}